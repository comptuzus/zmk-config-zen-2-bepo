#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
  chosen {
    zmk,matrix_transform = &default_transform;
    //zmk,matrix_transform = &five_column_transform;
  };
};

/ {
    macros {
        bepo_under: bepo_under {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp RALT>
                , <&macro_tap &kp SPACE>
                , <&macro_release &kp RALT>
                ;
        };
    };
};

/* Key index for combo
 0  1  2  3  4  5    6  7  8  9 10 11
12 13 14 15 16 17   18 19 20 21 22 23
24 25 26 27 28 29   30 31 32 33 34 35
         36 37 38   39 40 41     */

#define COMBO(name, keypress, keypos) \
combo_##name {                        \
	timeout-ms = <40>;            \
	bindings = <keypress>;        \
	key-positions = <keypos>;     \
};

/ {
    combos {
      compatible = "zmk,combos";
      // left hand
      COMBO(delete, &kp DELETE, 15 16)
      COMBO(enter_left, &kp RET, 13 16)
      // right hand
      COMBO(w, &kp RBKT, 6 22)
      COMBO(windows, &kp LGUI, 30 22)
      // left and right hand
      COMBO(BT1, &bt BT_SEL 0, 1 30)
      COMBO(BT2, &bt BT_SEL 1, 2 30)
      COMBO(BT3, &bt BT_SEL 2, 3 30)
      COMBO(BT4, &bt BT_SEL 3, 4 30)
      COMBO(F1, &kp F1, 1 33)
      COMBO(F2, &kp F2, 2 33)
      COMBO(F3, &kp F3, 3 33)
      COMBO(F4, &kp F4, 4 33)
      COMBO(F5, &kp F5, 5 33)
      COMBO(F6, &kp F6, 6 33)
      COMBO(F7, &kp F7, 7 33)
      COMBO(F8, &kp F8, 8 33)
      COMBO(F9, &kp F9, 9 33)
      COMBO(F10, &kp F10, 10 33)
      COMBO(F11, &kp F11, 11 33)
    };
  };

/ {

    behaviors {
        td_cl: tap_dance_shift_left {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_shift_left";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LCTRL>, <&kp LSHFT>;
        };
        td_sr: tap_dance_shift_right {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_shift_right";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp RSHIFT>, <&kp RCTRL>;
        };
        td_gr: tap_dance_gui_right {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_right_alt";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp RALT>, <&kp RGUI>;
        };
    };
        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        label = "BEPO";
// -----------------------------------------------------------------------------------------
// | TAB   |  B  |  É  |  P  |  O  |  È   |    |  ^  |  V    |  D  |  L  |  J  |  Z   |
// |ESC&CTR|  A  |  U  |  I  |  E  |  ;   |    |  C  |  T    |  S  |  R  |  N  |  M   |
// | SHFT  |  w  |  Y  |  X  |  :  |  K   |    |  ?  |  Q    |  G  |  H  |  F  | SHFT |
//                     | ALT | SPC | PKSP |    |RALT |ENT&RSE| LWR |
                        bindings = <
   &kp TAB       &kp Q    &kp W &kp E    &kp R     &kp T    &kp Y  &kp U     &kp I     &kp O   &kp P    &kp LBKT
   &mt LSHIFT ESC &kp A    &kp S &kp D    &kp F     &kp G    &kp H  &kp J     &kp K     &kp L   &kp SEMI &kp SQT
   &td_cl        &kp RBKT &kp X &kp C    &kp V     &kp B    &kp N  &kp M     &kp COMMA &kp DOT &kp FSLH &td_sr
                                &kp LALT &kp SPACE &kp BSPC &td_gr &lt 2 RET &mo 1
                        >;
                };
                lower_layer {
                        label = "LOWER";
// -----------------------------------------------------------------------------------------
// | TAB  |  "  |  «  |  »  |  (   |  )  |   |  @  |  +  |  -  |  /  |  *  |  =   |
// | BTCLR|     |HOME |PGDWN| PGUP | END |   | LFT | DWN |  UP | RGT |     |      |
// | SHFT |     |     |     |      |     |   |     |     |     |     |     |      |
//                    |     | SPC  | PKSP|   |RALT | ENT |     |
                        bindings = <
   &kp TAB    &kp N1   &kp N2   &kp N3    &kp N4    &kp N5   &kp N6   &kp N7  &kp N8    &kp N9  &kp N0   &kp MINUS
   &bt BT_CLR &trans   &kp HOME &kp PG_DN &kp PG_UP &kp END  &kp LEFT &kp DOWN &kp UP  &kp RIGHT &trans  &trans
   &kp LSHFT  &trans   &trans   &trans    &trans    &trans   &trans   &trans   &trans  &trans    &trans  &trans
                  &trans &bepo_under &kp BSPC   &kp RALT &kp RET &trans
                        >;
                };

                raise_layer {
                        label = "RAISE";
// -----------------------------------------------------------------------------------------
// | $    |  1  |  2  |  3  |  4   |  5  |   |  6  |  7  |  8  |  9  |  0  |  °   |
// | ESC  |  à  |     |     |      |     |   |  ç  |     |     |     |     |  %   |
// | SHFT |  à  |     |     |      |     |   |     |     |     |     |     |      |
//                    |     | SPC  | PKSP|   | RALT| ENT |     |
                        bindings = <
   &kp GRAVE &kp EXCL &kp AT &kp HASH &kp DLLR  &kp PRCNT &kp CARET &kp AMPS &kp STAR &kp LPAR &kp RPAR &kp UNDER
   &kp ESC   &kp Z    &trans &trans   &trans    &trans    &kp BSLH  &trans   &trans   &trans   &trans   &kp EQUAL
   &kp LSHFT &kp Z    &trans &trans   &trans    &trans    &trans    &trans   &trans   &trans   &trans   &trans
                       &trans &bepo_under &kp BSPC   &kp RALT &kp RET &trans
                        >;
                };
        };
};
